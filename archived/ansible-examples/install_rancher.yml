---
- name: Install Rancher 
  hosts: all
  gather_facts: no
  become: true
  become_method: sudo
  become_exe: /usr/bin/sudo

  tasks: 
  - name: create /root/bin
    file:
      path: /root/bin
      state: directory
      mode: 0700
      owner: root
      group: root

  - name: get helm
    uri:
      url: "https://{{ rancher_internal_airgap }}.{{ cluster_domain }}/charts/helm"
      dest: /root/bin/helm
      mode: 0700
      owner: root
      group: root
      validate_certs: no
      status_code: 200, 304

  - name: check for company-rancher repo
    shell: 
      cmd: "/root/bin/helm repo list |grep company-rancher"
    ignore_errors: yes
    register: repo_installed

  - name: check for cert-manager namespace
    shell: 
      cmd: "/var/lib/rancher/rke2/bin/kubectl get namespace |grep cert-manager"
    ignore_errors: yes
    register: cert_manager_namespace_exists

  - name: check for cattle-system namespace
    shell: 
      cmd: "/var/lib/rancher/rke2/bin/kubectl get namespace |grep cattle-system"
    ignore_errors: yes
    register: cattle_system_namespace_exists

  - name: add company-rancher repo
    shell:
      cmd: "/root/bin/helm repo add company-rancher https://{{ rancher_internal_airgap }}.{{ cluster_domain }}/charts --insecure-skip-tls-verify"
      chdir: /root
    when: repo_installed.rc != 0
   
  - name: update helm charts just in case 
    shell:
      cmd: "/root/bin/helm repo update"
      chdir: /root

  - name: fetch rancher charts
    shell:
      cmd: "/root/bin/helm fetch company-rancher/rancher --version {{ rancher_version }} --insecure-skip-tls-verify"
      chdir: /root

  - name: fetch cert-manager charts
    shell: 
      cmd: "/root/bin/helm fetch company-rancher/cert-manager --version v1.0.4 --insecure-skip-tls-verify"
      chdir: /root

  - name: create cert-manager template
    shell:
      cmd: "/root/bin/helm template cert-manager ./cert-manager-v1.0.4.tgz --output-dir . --namespace cert-manager --set image.repository={{ rancher_internal_airgap }}.{{ cluster_domain }}:443/quay.io/jetstack/cert-manager-controller --set webhook.image.repository={{ rancher_internal_airgap }}.{{ cluster_domain }}:443/quay.io/jetstack/cert-manager-webhook --set cainjector.image.repository={{ rancher_internal_airgap }}.{{ cluster_domain }}:443/quay.io/jetstack/cert-manager-cainjector"
      chdir: /root

  - name: create rancher template
    shell:
      cmd: "/root/bin/helm template rancher ./rancher-{{ rancher_version }}.tgz --output-dir . --namespace cattle-system --set hostname={{ rancher_mcm_loadbalancer_vip_name }}.{{ cluster_domain }} --set certmanager.version=1.0.4 --set rancherImage={{ rancher_internal_airgap }}.{{ cluster_domain }}:443/docker.io/rancher/rancher --set systemDefaultRegistry={{ rancher_internal_airgap }}.{{ cluster_domain }}:443/docker.io --set useBundledSystemChart=true"
      chdir: /root

  - name: get cert-manager-crd.yaml
    uri:
      url: "https://{{ rancher_internal_airgap }}.{{ cluster_domain }}/charts/cert-manager/cert-manager-crd.yaml"
      dest: /root/cert-manager
      mode: 0644
      owner: root
      group: root
      validate_certs: no
      status_code: 200, 304
 
  - name: create cert-manager namespace
    shell:
      cmd: /var/lib/rancher/rke2/bin/kubectl create namespace cert-manager
      chdir: /root
    when: cert_manager_namespace_exists.rc != 0
    ignore_errors: yes
    
  - name: apply cert-manager crd
    shell: 
      cmd: /var/lib/rancher/rke2/bin/kubectl apply -f /root/cert-manager/cert-manager-crd.yaml
      chdir: /root      
    ignore_errors: yes

  - name: apply cert-manager
    shell: 
      cmd: /var/lib/rancher/rke2/bin/kubectl apply -R -f /root/cert-manager
      chdir: /root      
    ignore_errors: yes

  - name: check for cert-manager pods
    shell: 
      cmd: "/var/lib/rancher/rke2/bin/kubectl get pods -n cert-manager |grep Running |wc -l"
    register: cert_manager_pod_up
    until: cert_manager_pod_up.stdout == "3"
    retries: 20
    delay: 30

  - name: create cattle-system namespace
    shell:
      cmd: /var/lib/rancher/rke2/bin/kubectl create namespace cattle-system
      chdir: /root      
    when: cattle_system_namespace_exists.rc != 0
    ignore_errors: yes

  - name: apply cattle-system
    shell: 
      cmd: /var/lib/rancher/rke2/bin/kubectl -n cattle-system apply -R -f /root/rancher
      chdir: /root      
    ignore_errors: yes

  - name: check for cattle system pods
    shell: 
      cmd: "/var/lib/rancher/rke2/bin/kubectl get pods -n cattle-system |grep Running |wc -l"
    register: cattle_system_pod_up
    until: cattle_system_pod_up.stdout == "4"
    retries: 20
    delay: 30
